
# Definition for a Node.
class Node:
    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):
        self.val = int(x)
        self.next = next
        self.random = random

import copy
class Solution:
    def copyRandomList(self, head: Node) -> Node:
        new_head = copy.deepcopy(head)
        returnList = []
        # def iterateNode(node):
        #     return node.next
        current_node = new_head
        while current_node.next:
            new_node = copy.deepcopy(current_node.next)
            new_node.random = copy.deepcopy(current_node.random)
            if new_node.next:
                current_node = copy.deepcopy(new_node.next)
        return new_head
        

yes = Solution()
first = Node(1)
second = Node(2)
first.next = second
first.random = first
second.random = first
print(yes.copyRandomList(first))

# iterates forever